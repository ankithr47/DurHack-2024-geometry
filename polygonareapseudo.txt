Algorithm to find area of a polygon of n sides:

Label the vertices as v0 to v(n-1)
nodes = [v0, v1, v2, v3 etc] (list of coordinates of vertices of polygon)
for i in range len(nodes), let nodes[i] have coordinates (xi, yi), with nodes[i].x = xi and nodes[i].y = yi
let polygon be the shape made by connecting the points

check if the midpoint of nodes[i] and nodes[i+2] lies within the polygon.
If it does, calculate the area of triangle with vertices nodes[i], nodes[i+1], nodes[i+2]
remove nodes[i+1], let i = (i+1)%len(nodes)
else, let i = (i+1) % len(nodes)
once length of nodes reaches 3, add area of remaining triangle


i = 0
total_area = 0
while len(nodes) > 3:
    test_coord = ((nodes[i].x +nodes[i+2].x) / 2, nodes[i].y+nodes[i+2].y / 2)
    if test_coord within polygon:
        calculate area of triangle nodes[i], nodes[i+1], nodes[i+2]
        total_area += area of triangle
        nodes.pop(i+1)
        i = (i+1) % len(nodes)
    else:
        i = (i+1) % len(nodes)
total_area += area of triangle (from coordinates remaining in nodes)
return total_area




    
    



